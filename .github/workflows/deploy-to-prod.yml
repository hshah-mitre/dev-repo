name: Deploy Jekyll Site to Staging and Production

on:
  push:
    branches:
      - main  # Trigger deployment when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the dev-repo
      - name: Checkout Development Repository
        uses: actions/checkout@v3

      # Step 2: Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Step 3: Install Ruby and Jekyll dependencies
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0 # Specify the Ruby version compatible with Jekyll
          bundler-cache: true

      - name: Install Jekyll and dependencies
        run: |
          gem install bundler
          bundle install

      # Step 4: Clean Build Directory
      - name: Clean Build Directory
        run: |
          rm -rf _site

      # Step 5: Build Jekyll Site
      - name: Build Jekyll Site
        run: |
          bundle exec jekyll build

      # Step 6: Validate Jekyll Build
      - name: Validate Jekyll Build
        run: |
          if [ ! -d "_site" ]; then
            echo "Jekyll build failed: _site directory not found."
            exit 1
          fi
          if [ -z "$(ls -A _site)" ]; then
            echo "Jekyll build failed: _site directory is empty."
            exit 1
          fi

      # Step 7: Deploy to dev-repo GitHub Pages
      - name: Deploy to Staging (GitHub Pages)
        run: |
          # Copy _site contents to a temporary directory
          mkdir temp_site
          cp -r _site/* temp_site/

          # Switch to gh-pages branch
          git checkout --orphan gh-pages
          git reset --hard
          git clean -fdx

          # Copy files from temp_site to the root of the gh-pages branch
          cp -r temp_site/* .
          rm -rf temp_site

          # Commit and push changes
          git add .
          git commit -m "Deploy Jekyll site to staging (GitHub Pages)"
          git push --force origin gh-pages

      # Step 8: Clone Production Repository
      - name: Clone Production Repository
        run: |
          git clone https://hshah-mitre:${{ secrets.PROD_REPO_PAT }}@github.com/hshah-mitre/prod-repo.git prod-repo
          cd prod-repo
          git pull origin main

      # Step 9: Copy All Generated Files to Production Repository
      - name: Copy Generated Files to Production Repository
        run: |
          rsync -av --exclude='.git' ./_site/ prod-repo/

      # Step 10: Commit and Push Changes to prod-repo
      - name: Commit and Push Changes
        run: |
          cd prod-repo
          git add .
          git commit -m "Deploy Jekyll site from dev-repo to prod-repo" || echo "No changes to commit."
          git push origin main
